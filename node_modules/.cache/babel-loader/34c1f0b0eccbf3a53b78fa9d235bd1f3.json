{"ast":null,"code":"var _jsxFileName = \"/Users/julianenochs/turing/mod3/_host/src/Containers/CocktailSearch/CocktailSearch.js\";\nimport React, { Component } from 'react';\nimport { searchCocktailsByName } from '../../apiCalls';\nexport class CocktailSearch extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        selectedCocktail: [e.target.value]\n      });\n    };\n\n    this.handleSearch = () => {\n      let cocktailQuery = this.state.selectedCocktail;\n      searchCocktailsByName(cocktailQuery).then(data => {\n        this.props.searchCocktailByName(data);\n      });\n    };\n\n    this.state = {\n      selectedCocktail: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"search\",\n      name: \"search\",\n      placeholder: \"Search For Cocktails\",\n      value: this.state.selectedCocktail,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" Search \"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  cocktailsByName: cocktailNames => dispatch(cocktailsByName(cocktailNames))\n});\n\nconst mapStateToProp = state => ({\n  cocktailsByName: state.cocktailsByName\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CocktailSearch);","map":{"version":3,"sources":["/Users/julianenochs/turing/mod3/_host/src/Containers/CocktailSearch/CocktailSearch.js"],"names":["React","Component","searchCocktailsByName","CocktailSearch","constructor","handleChange","e","setState","selectedCocktail","target","value","handleSearch","cocktailQuery","state","then","data","props","searchCocktailByName","render","mapDispatchToProps","dispatch","cocktailsByName","cocktailNames","mapStateToProp","connect","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AAEA,OAAO,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAC5CG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,YAPc,GAOEC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAE,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV;AAApB,OAAd;AACD,KATa;;AAAA,SAWdC,YAXc,GAWC,MAAM;AACnB,UAAIC,aAAa,GAAG,KAAKC,KAAL,CAAWL,gBAA/B;AACAN,MAAAA,qBAAqB,CAACU,aAAD,CAArB,CACGE,IADH,CACQC,IAAI,IAAI;AACZ,aAAKC,KAAL,CAAWC,oBAAX,CAAgCF,IAAhC;AACD,OAHH;AAID,KAjBa;;AAEZ,SAAKF,KAAL,GAAa;AACXL,MAAAA,gBAAgB,EAAE;AADP,KAAb;AAGD;;AAcDU,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,WAAW,EAAC,sBAHd;AAIE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWL,gBAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKH,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQI;AAAQ,MAAA,OAAO,EAAE,KAAKM,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,CADF;AAYD;;AAjC2C;;AAoC9C,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,eAAe,EAAGC,aAAD,IAAmBF,QAAQ,CAACC,eAAe,CAACC,aAAD,CAAhB;AADN,CAAL,CAAnC;;AAIA,MAAMC,cAAc,GAAGV,KAAK,KAAK;AAC/BQ,EAAAA,eAAe,EAAER,KAAK,CAACQ;AADQ,CAAL,CAA5B;;AAIA,eAAeG,OAAO,CAACC,eAAD,EAAkBN,kBAAlB,CAAP,CAA6ChB,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { searchCocktailsByName } from '../../apiCalls';\n\nexport class CocktailSearch extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedCocktail: ''\n    }\n  }\n  \n  handleChange = (e) => {\n    this.setState({ selectedCocktail: [e.target.value] })\n  }\n  \n  handleSearch = () => {\n    let cocktailQuery = this.state.selectedCocktail\n    searchCocktailsByName(cocktailQuery)\n      .then(data => {\n        this.props.searchCocktailByName(data)\n      })\n  }\n\n  render(){\n    return(\n      <section>\n        <input\n          type='search'\n          name='search'\n          placeholder='Search For Cocktails'\n          value={this.state.selectedCocktail}\n          onChange={this.handleChange}\n          />\n          <button onClick={this.handleSearch}> Search </button>\n        </section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  cocktailsByName: (cocktailNames) => dispatch(cocktailsByName(cocktailNames))\n});\n\nconst mapStateToProp = state => ({\n  cocktailsByName: state.cocktailsByName\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CocktailSearch);"]},"metadata":{},"sourceType":"module"}